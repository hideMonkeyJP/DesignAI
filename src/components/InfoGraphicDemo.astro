---
---

<div class="infographic-demo">
  <div class="info-header">
    <h2>データ可視化</h2>
    <p>効果的な情報伝達のために</p>
  </div>

  <div class="info-grid">
    <div class="info-card stats">
      <div class="stat-group">
        <div class="stat-item">
          <div class="stat-number">85<span class="percent">%</span></div>
          <div class="stat-label">理解度向上</div>
        </div>
        <div class="progress-bar">
          <div class="progress" style="width: 85%"></div>
        </div>
      </div>
    </div>

    <div class="info-card process">
      <div class="process-steps">
        <div class="step">
          <div class="step-number">1</div>
          <div class="step-content">
            <h4>データ収集</h4>
            <p>必要な情報を集める</p>
          </div>
        </div>
        <div class="step-connector"></div>
        <div class="step">
          <div class="step-number">2</div>
          <div class="step-content">
            <h4>分析</h4>
            <p>データを整理する</p>
          </div>
        </div>
        <div class="step-connector"></div>
        <div class="step">
          <div class="step-number">3</div>
          <div class="step-content">
            <h4>可視化</h4>
            <p>図表で表現する</p>
          </div>
        </div>
      </div>
    </div>

    <div class="info-card comparison">
      <div class="chart">
        <div class="chart-bar" style="height: 30%">
          <span class="chart-label">A</span>
        </div>
        <div class="chart-bar" style="height: 60%">
          <span class="chart-label">B</span>
        </div>
        <div class="chart-bar" style="height: 90%">
          <span class="chart-label">C</span>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
  .infographic-demo {
    background-color: #f8f9fa;
    padding: 2rem;
    min-height: 400px;
  }

  .info-header {
    text-align: center;
    margin-bottom: 2rem;
  }

  .info-header h2 {
    font-size: 1.8rem;
    color: #2c3e50;
    margin-bottom: 0.5rem;
  }

  .info-header p {
    color: #666;
  }

  .info-grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 1.5rem;
  }

  .info-card {
    background: white;
    border-radius: 12px;
    padding: 1.5rem;
    box-shadow: 0 2px 4px rgba(0,0,0,0.05);
  }

  /* Stats Card */
  .stat-group {
    text-align: center;
  }

  .stat-number {
    font-size: 3rem;
    font-weight: bold;
    color: #3498db;
    line-height: 1;
  }

  .percent {
    font-size: 1.5rem;
  }

  .stat-label {
    color: #666;
    margin: 0.5rem 0;
  }

  .progress-bar {
    background: #eee;
    height: 8px;
    border-radius: 4px;
    margin-top: 1rem;
  }

  .progress {
    background: #3498db;
    height: 100%;
    border-radius: 4px;
    transition: width 1s ease-in-out;
  }

  /* Process Card */
  .process-steps {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .step {
    display: flex;
    align-items: center;
    gap: 1rem;
  }

  .step-number {
    background: #e74c3c;
    color: white;
    width: 30px;
    height: 30px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: bold;
  }

  .step-content h4 {
    margin: 0;
    color: #2c3e50;
  }

  .step-content p {
    margin: 0;
    font-size: 0.9rem;
    color: #666;
  }

  .step-connector {
    width: 2px;
    height: 20px;
    background: #eee;
    margin-left: 14px;
  }

  /* Chart Card */
  .chart {
    height: 200px;
    display: flex;
    align-items: flex-end;
    justify-content: space-around;
    padding-top: 1rem;
  }

  .chart-bar {
    width: 40px;
    background: #2ecc71;
    border-radius: 4px 4px 0 0;
    position: relative;
    transition: height 1s ease-in-out;
  }

  .chart-label {
    position: absolute;
    bottom: -25px;
    left: 50%;
    transform: translateX(-50%);
    color: #666;
  }

  @media (max-width: 768px) {
    .info-grid {
      grid-template-columns: 1fr;
    }

    .info-header h2 {
      font-size: 1.5rem;
    }
  }
</style>

<script>
  // アニメーション効果を追加
  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.style.opacity = '1';
        entry.target.style.transform = 'translateY(0)';
      }
    });
  });

  document.querySelectorAll('.info-card').forEach(card => {
    card.style.opacity = '0';
    card.style.transform = 'translateY(20px)';
    card.style.transition = 'all 0.6s ease-out';
    observer.observe(card);
  });
</script>